---
import StoryCard from "$lib/components/card.svelte";
import BaseLayout from "$layouts/BaseLayout.astro";
import { titleCase } from "title-case";
import type { GetStaticPathsItem } from "astro";
import { getCollection, getEntry } from "astro:content";
export async function getStaticPaths() {
	let tagObj: Record<string, boolean> = {};
	[
		...(await getCollection("posts")),
		...(await getCollection("tips")),
	].forEach((post) => {
		post.data.tags.forEach((tag) => {
			tag = tag.toLowerCase();
			if (!tagObj[tag]) {
				tagObj[tag] = true;
			}
		});
	});
	let paths: GetStaticPathsItem[] = [];
	Object.keys(tagObj).forEach((tag) => {
		paths.push({
			params: { tag: tag.replaceAll(" ", "-") },
			props: { tag: tag },
		});
	});
	return paths;
}
// @ts-ignore
let posts = [
	...(await getCollection("posts")),
	...(await getCollection("tips")),
];

const tag = titleCase(Astro.props.tag);
posts = posts.filter((value) =>
	value.data.tags.find((val) => val.toLowerCase() === tag.toLowerCase())
);

posts.sort((a, b) => b.data.published - a.data.published);

posts = posts.slice(0, 20);
---

<BaseLayout SEO={{ title: `Articles tagged ${tag} - Byteofdev` }}>
	<h1 class="font-sans font-bold text-center mb-6 text-4xl md:text-6xl">
		{tag}
	</h1>
	<main
		class="m-auto grid p-4 gap-5 md:p-0 md:w-3/4 md:grid-cols-3 lg:grid-cols"
	>
		{
			posts.map(async (item, index) => {
				const author = await getEntry("author", item.data.author.slug);
				return (
					<StoryCard item={item} lazy={index > 0} author={author} />
				);
			})
		}
	</main>
</BaseLayout>
